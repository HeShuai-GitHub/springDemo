<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
>
    <!--Xml方式定义事务配置-->

    <!--使用Bean定义 来读取properties文件-->
<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:/jdbc/db.properties"></property>
    </bean>-->

    <!--context命名空间  读取资源文件 读取properties文件
        必须先配置context命名空间，xmlns:context="http://www.springframework.org/schema/context"
		 xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd"
    -->
    <context:property-placeholder location="jdbc/db.properties"></context:property-placeholder>

    <!--获取连接数据看的数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--将数据源注入到jdbcTemplate中-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--设置事务管理器，成员属性dataSource用来设置数据源-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--Xml方式定义事务配置 start-->
    <!--定义事务通知-->
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <!--设置通知到的具体方法-->
            <!--<tx:method name="buyBook"/>-->
            <tx:method name="buyTwoBooks"/>
            <!--可以使用通配符的方式，匹配多个方法-->
            <!--<tx:method name="*"/>-->
            <!--<tx:method name="select*"/>-->
        </tx:attributes>
    </tx:advice>

    <!--事务相当于Aop的一个应用方面-->
    <aop:config>
        <!--定义切入点表达式-->
        <aop:pointcut id="pointCut" expression="execution(* com.spring.jdbc.transaction.service.Impl.*.*(..))"/>
        <!--配置通知-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
    </aop:config>
    <!--Xml方式定义事务配置 start-->

    <!--扫描指定路径下的包，并开启spring注解模式-->
    <context:component-scan base-package="com.spring.jdbc.transaction"></context:component-scan>

</beans>